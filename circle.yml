version: 2

.job-defaults: &job-defaults
  docker:
    - image: circleci/node:10.15

.store-cache-npm-deps: &store-cache-npm-deps
  save_cache:
    key: npm-deps-{{ checksum "yarn.lock" }}
    paths: [ node_modules, ~/.cache/Cypress/ ]

.restore-cache-npm-deps: &restore-cache-npm-deps
  restore_cache:
    key: npm-deps-{{ checksum "yarn.lock" }}

.attach-workspace: &attach-workspace
  attach_workspace:
    at: .

.run-install: &run-install
  run:
    name: Installing
    command: yarn install --frozen-lockfile

jobs:
  install:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - *store-cache-npm-deps

  api:build:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run:
          name: Build
          command: |
            yarn api:build
      - persist_to_workspace:
          root: .
          paths:
            - dist/api/*
      - store_artifacts: { path: dist/api, destination: dist/api }

  api:tests:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn api:test:ci
      - store_test_results:
          path: dist/api/coverage/

  api:e2e:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn api:e2e

  linting:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn lint

  modules:build:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn modules:build
      - persist_to_workspace:
          root: .
          paths:
            - dist/ngx-trivia-api/*
      - store_test_results:
          path: dist/api/coverage/
  modules:tests:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn modules:test:ci
#      - store_test_results:
#          path: dist/api/coverage/

  demo-app:build:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn build
  demo-app:tests:
    <<: *job-defaults
    steps:
      - checkout
      - *restore-cache-npm-deps
      - *run-install
      - run: yarn test:ci
#      - store_test_results:
#          path: dist/api/coverage/

  docker:
    <<: *job-defaults
    environment:
    steps:
      - setup_remote_docker
      - checkout
      - *attach-workspace
      - run:
          name: Build Docker
          command: |
            export DOCKER_IMAGE_NAME=ryzy/trivia-api
            export DOCKER_IMAGE_NAME_AND_TAG=${DOCKER_IMAGE_NAME}:v${CIRCLE_BUILD_NUM}

            echo $DOCKER_PASSW | docker login -u $DOCKER_USER --password-stdin
            docker-compose build

            docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME_AND_TAG
            docker push $DOCKER_IMAGE_NAME
            docker push $DOCKER_IMAGE_NAME_AND_TAG
            echo "Successfully built and pushed Docker image '$DOCKER_IMAGE_NAME_AND_TAG'"

#
# Workflow setup
#
workflows:
  version: 2
  build test deploy:
    jobs:
      - install
      - api:build:
          requires: [ install ]
      - api:tests:
          requires: [ install ]
      - api:e2e:
          requires: [ install ]
      - linting:
          requires: [ install ]
      - modules:build:
          requires: [ install ]
      - modules:tests:
          requires: [ install ]
      - demo-app:build:
          requires: [ modules:build ]
      - demo-app:tests:
          requires: [ modules:build ]
      - docker:
          requires: [ api:build, modules:build ]
          filters:
            branches:
              only: master
          context: org-default # so we have shared env variables
